import discord
from discord.ext import commands
from discord import app_commands
import logging
import json
import re

class Anonymous(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        with open("config.json", "r") as f:
            self.config = json.load(f)
        self.setup_logger()
        self.url_pattern = re.compile(
            r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+|'
            r'(?:www\.)?(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,6}(?:/[^\s]*)?'
        )
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è Discord –∏–Ω–≤–∞–π—Ç–æ–≤
        self.discord_invite_pattern = re.compile(
            r'(?:https?://)?(?:www\.)?(discord\.(?:gg|io|me|li)|discordapp\.com/invite)/[a-zA-Z0-9]+',
            re.IGNORECASE
        )
        
        # –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤
        self.allowed_domains = {
            'youtube.com',
            'youtu.be',
            'google.com',
            'github.com',
            'spotify.com',
            'wikipedia.org',
            'stackoverflow.com'
        }
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è URL —Å —É—á–µ—Ç–æ–º –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤
        self.url_pattern = re.compile(
            r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+'
        )

    def setup_logger(self):
        self.logger = logging.getLogger('safety_logs')
        self.logger.setLevel(logging.WARNING)
        handler = logging.FileHandler('data/safety_logs.log')
        formatter = logging.Formatter('%(asctime)s - %(levellevelname)s - %(message)s')
        handler.setFormatter(formatter)
        self.logger.addHandler(handler)

    def is_allowed_url(self, url: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º"""
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω –∏–∑ URL
            domain = url.lower()
            for prefix in ['https://', 'http://', 'www.']:
                if domain.startswith(prefix):
                    domain = domain[len(prefix):]
            domain = domain.split('/')[0]
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω
            return any(domain.endswith(allowed_domain) for allowed_domain in self.allowed_domains)
        except:
            return False

    def filter_links(self, message: str) -> tuple[str, bool]:
        """
        –§–∏–ª—å—Ç—Ä—É–µ—Ç —Å—Å—ã–ª–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (–æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–µ_—Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∏—Ç_discord_–∏–Ω–≤–∞–π—Ç)
        """
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Discord –∏–Ω–≤–∞–π—Ç–æ–≤
        if self.discord_invite_pattern.search(message):
            return message, True
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏
        def replace_url(match):
            url = match.group(0)
            return url if self.is_allowed_url(url) else '[–°—Å—ã–ª–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞]'
        
        filtered_message = self.url_pattern.sub(replace_url, message)
        return filtered_message, False

    @app_commands.command(name="anon", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    @app_commands.describe(
        message="–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è",
        user="–ü–æ–ª—É—á–∞—Ç–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏—è"
    )
    async def anon(self, interaction: discord.Interaction, message: str, user: discord.Member):
        await interaction.response.defer(ephemeral=True)

        if user.bot:
            await interaction.followup.send("‚ùå –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞–º!", ephemeral=True)
            return

        try:
            filtered_message, has_invite = self.filter_links(message)
            
            if has_invite:
                await interaction.followup.send(
                    "‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ Discord —Å–µ—Ä–≤–µ—Ä—ã!",
                    ephemeral=True
                )
                return
            
            embed = discord.Embed(
                title="üì´ –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
                description=filtered_message,
                color=discord.Color.blue()
            )
            embed.set_footer(text="–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–Ω–æ–Ω–∏–º–Ω–æ")
            
            try:
                await user.send(embed=embed)
                await interaction.followup.send("‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", ephemeral=True)
            except discord.Forbidden:
                await interaction.followup.send(
                    "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫—Ä—ã—Ç—ã –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                    ephemeral=True
                )

        except Exception as e:
            self.logger.error(f"Error in anon command: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                ephemeral=True
            )

async def setup(bot: commands.Bot):
    await bot.add_cog(Anonymous(bot))
